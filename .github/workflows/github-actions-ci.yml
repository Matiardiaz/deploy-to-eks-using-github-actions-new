name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # - name: Install kubectl
    #   uses: azure/setup-kubectl@v2.0
    #   with:
    #     version: 'v1.24.0' # default is latest stable
    #   id: install

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1

    - name: Login to Docker registry
      uses: docker/login-action@v1
      with:
        registry: https://registry.docker.com/repository/docker/cabradiaz/jenkins-labs
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
      uses: docker/build-push-action@v4.1.1
      with:
        context: .
        push: true
        tags: jenkins-labs/github-actions:latest

          
          
    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Build, tag, and push docker image to Amazon ECR
    #   env:
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: myecrrepo
    #     IMAGE_TAG: 1.1
    #   run: |
    #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
    #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG


    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name myapp-eks-cluster 
    
    # - name: Deploy to EKS
    #   run: |
    #     kubectl apply -f deployment.yaml
    #     kubectl apply -f service.yaml

##comentario solo para un commit y push